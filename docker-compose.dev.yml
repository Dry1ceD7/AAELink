version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: aaelink-postgres-dev
    environment:
      POSTGRES_USER: aaelink
      POSTGRES_PASSWORD: aaelink_dev
      POSTGRES_DB: aaelink_db
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aaelink -d aaelink_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aaelink-network-dev

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aaelink-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aaelink-network-dev

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: aaelink-minio-dev
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data_dev:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - aaelink-network-dev

  # n8n Workflow Automation (Optional)
  n8n:
    image: n8nio/n8n:latest
    container_name: aaelink-n8n-dev
    environment:
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      NODE_ENV: development
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: aaelink
      DB_POSTGRESDB_PASSWORD: aaelink_dev
    volumes:
      - n8n_data_dev:/home/node/.n8n
    ports:
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aaelink-network-dev
    profiles:
      - full

networks:
  aaelink-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  minio_data_dev:
    driver: local
  n8n_data_dev:
    driver: local
